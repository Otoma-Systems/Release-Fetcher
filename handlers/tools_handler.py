import os
import platform
import sys
from time import sleep

def PrintLogo():
    Logo = [
        " ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓",
        " ┃          #########       ################         #########         #######        #######        ########        ┃",
        " ┃       ###############    ################      ###############      ########      ########       #########        ┃",
        " ┃     ###################  ################    ###################    #########    #########       ##########       ┃",
        " ┃    ##################### ################   #####################   ######################      ###########       ┃",
        " ┃   ########       ########     ######       ########       ########  ######################      ############      ┃",
        " ┃  #######           ######     ######      ########          ####### ######################     #############      ┃",
        " ┃  #######           #######    ######      #######           ####### ######################     ######  ######     ┃",
        " ┃  #######           #######    ######      #######           ####### ######  ######  ######    ######   ######     ┃",
        " ┃  ########         #######     ######       #######         ######## ######   ####   ######   ######## ########    ┃",
        " ┃   ########       ########     ######       #########      ########  ######          ######   ##################   ┃",
        " ┃    #####################      ########   ########################   ######          ######  ###################   ┃",
        " ┃     ###################        #################################    ######          ######  ####################  ┃",
        " ┃       ###############           ##############################      ######          ###### ######         ######  ┃",
        " ┃          ########                 ############     ########         ######          ###### ######         ######  ┃",
        " ┃                                                                                     ######                        ┃",
        " ┃                                                                                     ######                        ┃",
        " ┃                                                                                     ######                        ┃",
        " ┃                                                                                     ######                        ┃",
        " ┣╍╍╍╍╍┳╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍╍┳╍╍╍╍╍┫",
        " ┃     ┃                   ____       __                        ______     __       __                         ┃     ┃",
        " ┃  O  ┃                  / __ \___  / /__  ____ _________     / ____/__  / /______/ /_  ___  _____            ┃  O  ┃",
        " ┃  T  ┃                 / /_/ / _ \/ / _ \/ __ `/ ___/ _ \   / /_  / _ \/ __/ ___/ __ \/ _ \/ ___/            ┃  T  ┃",
        " ┃  O  ┃                / _, _/  __/ /  __/ /_/ (__  )  __/  / __/ /  __/ /_/ /__/ / / /  __/ /                ┃  O  ┃",
        " ┃  M  ┃               /_/ |_|\___/_/\___/\__,_/____/\___/  /_/    \___/\__/\___/_/ /_/\___/_/                 ┃  M  ┃",
        " ┃  A  ┃                                                                                                       ┃  A  ┃", 
        " ┃     ┃                          Developed and Distributed By: Otoma Systems!                                 ┃     ┃", 
        " ┗━━━━━┛━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┗━━━━━┛"
    ]

    for line in Logo:
        print(line)
    sleep(3)

def WaitKeyToClose(message, timeToWait = 10, waitToClose = False):
    print("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
    print(message)
    if waitToClose:
        if platform.system() == "Windows":
            os.system("pause")
            sys.exit()
        else:
            os.system("/bin/bash -c 'read -s -n 1 -p \"Press any key to continue...\"'")
            sys.exit()
    else:
        sleep(timeToWait)
        sys.exit()

def CompareTwoDicts(slaveDict, masterDict):
    dictUnion = slaveDict | masterDict
    for dictKey in set(slaveDict):
        if type(slaveDict.get(dictKey)) is dict:
            dictUnion[dictKey] = CompareTwoDicts(slaveDict[dictKey], masterDict.get(dictKey, {}))
    return dictUnion
